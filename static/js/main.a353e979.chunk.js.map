{"version":3,"sources":["logo.svg","serviceWorker.js","CountryPicker.js","CoronaTracker.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","CountryPicker","props","fetchCountries","axios","get","then","response","setState","countries","data","handleChange","event","value","target","handleCountryChange","state","country","this","FormControl","NativeSelect","onChange","map","c","key","name","Component","CoronaTracker","negara","positif","confirmed","meninggal","deaths","sembuh","recovered","getData","positifGlobal","meninggalGlobal","sembuhGlobal","lastupdateGlobal","lastUpdate","catch","error","console","log","lastupdate","Fragment","Helmet","className","href","class","style","color","id","start","end","duration","separator","Date","toLocaleString","timeZone","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a353e979.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react'\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default class CountryPicker extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            countries:[],\r\n            country:\"\"\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.fetchCountries()\r\n    }\r\n    fetchCountries=()=>{\r\n        axios.get(\"https://covid19.mathdro.id/api/countries\")\r\n        .then(response=>{\r\n            this.setState({\r\n                countries:response.data.countries\r\n            })\r\n        })\r\n    }\r\n    handleChange=(event)=>{\r\n        var value=event.target.value;\r\n        this.props.handleCountryChange(value);\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <center>\r\n              <FormControl>\r\n                  <NativeSelect onChange={this.handleChange}>\r\n                     <option>Pilih Negara...</option>\r\n                     {\r\n                         this.state.countries.map(c=>(\r\n                         <option key={c.name} value={c.name}>{c.name}</option>\r\n                         ))\r\n                     }\r\n                    \r\n                      </NativeSelect>\r\n                    \r\n                  </FormControl>\r\n              </center>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/corona.css';\r\nimport CountUp from 'react-countup';\r\nimport CountryPicker from './CountryPicker';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport default class CoronaTracker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            positifGlobal: null,\r\n            meninggalGlobal: null,\r\n            sembuhGlobal: null,\r\n            positif: null,\r\n            meninggal: null,\r\n            sembuh: null,\r\n            lastupdate: null,\r\n            negara: null\r\n\r\n        }\r\n    }\r\n    handleCountryChange = (negara) => {\r\n        axios.get(\"https://covid19.mathdro.id/api/countries/\" + negara)\r\n            .then(response => {\r\n                this.setState({\r\n                    positif: response.data.confirmed.value,\r\n                    meninggal: response.data.deaths.value,\r\n                    sembuh: response.data.recovered.value,\r\n                })\r\n            })\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n    getData = () => {\r\n        axios.get('https://covid19.mathdro.id/api')\r\n            .then(response => {\r\n                this.setState({\r\n                    positifGlobal: response.data.confirmed.value,\r\n                    meninggalGlobal: response.data.deaths.value,\r\n                    sembuhGlobal: response.data.recovered.value,\r\n                    lastupdateGlobal: response.data.lastUpdate\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response);\r\n\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Helmet>\r\n                    <title>Tugas React Pantau COVID-19</title>\r\n                </Helmet>\r\n                <div className=\"jumbotron jumbotron-fluid text-white\">\r\n                    <div className=\"container text-center\">\r\n                        <p><a className=\"btnHome\" href=\"https://iyadrz.github.io/index.html#tugas\">Kembali ke Homepage</a></p>\r\n                        <h1 className=\"display-4 text-danger\"><strong>KAWAL COVID-19</strong></h1>\r\n                        <p className=\"lead\">\r\n                            <h2>PANTAU PENYEBARAN VIRUS COVID-19<br />SECARA REAL-TIME<br /></h2>\r\n                            <h3>Jaga Diri dan Tetap Patuhi Protokol Kesehatan</h3>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"corona-body\">\r\n                    <div className=\"container\">\r\n                        <div className=\"col-md-12 mt-3\">\r\n                            <h1>DUNIA</h1>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div class=\"col pt-2\">\r\n                                <div class=\"box text-white text-center\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h4 style={{ color: \"rgb(0, 153, 255)\" }}>Positif</h4>\r\n                                            <h2 id=\"data-kasus\" style={{ color: \"rgb(0, 153, 255)\" }}>\r\n                                                <CountUp\r\n                                                    start={0}\r\n                                                    end={this.state.positifGlobal}\r\n                                                    duration={1}\r\n                                                    separator=\".\" />\r\n                                            </h2>\r\n                                            <h4 style={{ color: \"rgba(0, 153, 255, 0.795)\" }}>orang</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col pt-2\">\r\n                                <div class=\"box text-white text-center\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h4 style={{ color: \"rgb(255, 0, 0)\" }}>Meninggal</h4>\r\n                                            <h2 id=\"data-kasus\" style={{ color: \"rgb(255, 0, 0)\" }}>\r\n                                                <CountUp\r\n                                                    start={0}\r\n                                                    end={this.state.meninggalGlobal}\r\n                                                    duration={1}\r\n                                                    separator=\".\" />\r\n                                            </h2>\r\n                                            <h4 style={{ color: \"rgb(255, 0, 0)\" }}>orang</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col pt-2\">\r\n                                <div class=\"box text-white text-center\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h4 style={{ color: \"rgba(0, 255, 0, 0.795)\" }}>Sembuh</h4>\r\n                                            <h2 id=\"data-kasus\" style={{ color: \"rgba(0, 255, 0, 0.795)\" }}>\r\n                                                <CountUp\r\n                                                    start={0}\r\n                                                    end={this.state.sembuhGlobal}\r\n                                                    duration={1}\r\n                                                    separator=\".\" />\r\n                                            </h2>\r\n                                            <h4 style={{ color: \"rgba(0, 255, 0, 0.795)\" }}>orang</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-md-12 mt-5\">\r\n                            <h1>NEGARA</h1>\r\n                        </div>\r\n\r\n                        <center>\r\n                            <div className=\"combo col-md-12\">\r\n                                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                            </div>\r\n                        </center>\r\n\r\n                        <div className=\"row\">\r\n                            <div class=\"col pt-2\">\r\n                                <div class=\"box text-white text-center\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h4 style={{ color: \"rgb(0, 153, 255)\" }}>Positif</h4>\r\n                                            <h2 id=\"data-kasus\" style={{ color: \"rgb(0, 153, 255)\" }}>\r\n                                                <CountUp\r\n                                                    start={0}\r\n                                                    end={this.state.positif}\r\n                                                    duration={1}\r\n                                                    separator=\".\" />\r\n                                            </h2>\r\n                                            <h4 style={{ color: \"rgba(0, 153, 255, 0.795)\" }}>orang</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col pt-2\">\r\n                                <div class=\"box text-white text-center\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h4 style={{ color: \"rgb(255, 0, 0)\" }}>Meninggal</h4>\r\n                                            <h2 id=\"data-kasus\" style={{ color: \"rgb(255, 0, 0)\" }}>\r\n                                                <CountUp\r\n                                                    start={0}\r\n                                                    end={this.state.meninggal}\r\n                                                    duration={1}\r\n                                                    separator=\".\" />\r\n                                            </h2>\r\n                                            <h4 style={{ color: \"rgb(255, 0, 0)\" }}>orang</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col pt-2\">\r\n                                <div class=\"box text-white text-center\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <h4 style={{ color: \"rgba(0, 255, 0, 0.795)\" }}>Sembuh</h4>\r\n                                            <h2 id=\"data-kasus\" style={{ color: \"rgba(0, 255, 0, 0.795)\" }}>\r\n                                                <CountUp\r\n                                                    start={0}\r\n                                                    end={this.state.sembuh}\r\n                                                    duration={1}\r\n                                                    separator=\".\" />\r\n                                            </h2>\r\n                                            <h4 style={{ color: \"rgba(0, 255, 0, 0.795)\" }}>orang</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <footer class=\"text-center text-white mt-3 bt-2 pb-2\">\r\n                        Last Updated <h6 id=\"lastUpdated\">{new Date(this.state.lastupdateGlobal).toLocaleString(\"id-ID\", { timeZone: \"Asia/Makassar\" })} GMT+0800 (Central Indonesia Time)</h6>\r\n                    </footer>\r\n                </div>\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport CoronaTracker from './CoronaTracker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CoronaTracker />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}